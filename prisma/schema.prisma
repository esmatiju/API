// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Tags {
  id     String      @id @default(uuid())
  name   String
  // Relations
  Plants TagsPlant[]
}

model TagsPlant {
  id       String @id @default(uuid())
  id_plant String
  id_tags  String
  Plant    Plant  @relation(fields: [id_plant], references: [id])
  Tags     Tags   @relation(fields: [id_tags], references: [id])
}

model Plant {
  id               String             @id @default(uuid())
  picture_url      String
  name             String
  description      String
  hint             String
  fullname         String
  // Relations
  TagsPlant        TagsPlant[]
  PlantGardenPhoto PlantGardenPhoto[]
  Photo_comu       Photo_comu[]
}

model Garden {
  id               String             @id @default(uuid())
  latitude         Float
  longitude        Float
  address          String
  ville            String
  cp               String
  owner_id         String
  other_user_id    String?
  updated_at       DateTime           @updatedAt
  created_at       DateTime           @default(now())
  status           String
  botanist_id      String
  // Relations
  PlantGardenPhoto PlantGardenPhoto[]
  Message          Message[]
}

model User {
  id          String     @id @default(uuid())
  lastname    String
  firstname   String
  email       String     @unique
  password    String
  picture_url String
  isPubliable Boolean
  // Relations
  Botanist    Botanist[]
  Message     Message[]
}

model Botanist {
  id      String @id @default(uuid())
  user_id String
  siret   String
  // Relations
  User    User   @relation(fields: [user_id], references: [id])
}

model Message {
  id         String   @id @default(uuid())
  user_id    String
  created_at DateTime @default(now())
  garden_id  String
  message    String
  // Relations
  User       User     @relation(fields: [user_id], references: [id])
  Garden     Garden   @relation(fields: [garden_id], references: [id])
}

model Photos {
  id               String             @id @default(uuid())
  picture_url      String
  // Relations
  PlantGardenPhoto PlantGardenPhoto[]
  Photo_comu       Photo_comu[]
}

model Photo_comu {
  id        String @id @default(uuid())
  id_photos String
  plant_id  String
  // Relations
  Photos    Photos @relation(fields: [id_photos], references: [id])
  Plant     Plant  @relation(fields: [plant_id], references: [id])
}

model PlantGardenPhoto {
  id        String @id @default(uuid())
  id_plant  String
  id_garden String
  id_photo  String
  // Relations
  Plant     Plant  @relation(fields: [id_plant], references: [id])
  Garden    Garden @relation(fields: [id_garden], references: [id])
  Photos    Photos @relation(fields: [id_photo], references: [id])
}
